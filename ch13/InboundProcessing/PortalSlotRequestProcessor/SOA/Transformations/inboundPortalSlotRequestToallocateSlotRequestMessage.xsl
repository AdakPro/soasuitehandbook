<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
                xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
                xmlns:ns0="http://xmlns.oracle.com/pcbpel/adapter/db/top/PortalSlotRequestPoller"
                xmlns:mhdr="http://www.oracle.com/XSL/Transform/java/oracle.tip.mediator.service.common.functions.MediatorExtnFunction"
                xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
                xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:socket="http://www.oracle.com/XSL/Transform/java/oracle.tip.adapter.socket.ProtocolTranslator"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tns="saibot.airport/services/slot"
                exclude-result-prefixes="xsd xsi oracle-xsl-mapper xsl ns0 tns oraxsl xp20 xref mhdr oraext dvm socket"
                xmlns:reference="saibot.airport/data/reference" xmlns:common="saibot.airport/data/common">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../Schemas/PortalSlotRequestPoller_table.xsd"/>
        <oracle-xsl-mapper:rootElement name="PortalSlotAllocationsCollection"
                                       namespace="http://xmlns.oracle.com/pcbpel/adapter/db/top/PortalSlotRequestPoller"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../SlotService.xsd"/>
        <oracle-xsl-mapper:rootElement name="allocateSlotRequestMessage" namespace="saibot.airport/services/slot"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.1.3.0.0(XSLT Build 140529.0700.0211) AT [MON AUG 04 12:05:13 CEST 2014].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <tns:allocateSlotRequestMessage>
      <tns:AllocationDate>
        <xsl:value-of select="xp20:current-date ( )"/>
      </tns:AllocationDate>
      <tns:Carrier>
        <xsl:value-of select="/ns0:PortalSlotAllocationsCollection/ns0:PortalSlotAllocations/ns0:carrier"/>
      </tns:Carrier>
      <tns:TimePlanningUnit>
        <reference:startDate>
          <xsl:value-of select="/ns0:PortalSlotAllocationsCollection/ns0:PortalSlotAllocations/ns0:startDateForSlot"/>
        </reference:startDate>
        <reference:endDate>
          <xsl:value-of select="/ns0:PortalSlotAllocationsCollection/ns0:PortalSlotAllocations/ns0:endDateForSlot"/>
        </reference:endDate>
        <reference:HourOfDay>
          <xsl:value-of select="/ns0:PortalSlotAllocationsCollection/ns0:PortalSlotAllocations/ns0:hourOfDay"/>
        </reference:HourOfDay>
        <reference:FiveMinuteBlock>
          <xsl:value-of select="/ns0:PortalSlotAllocationsCollection/ns0:PortalSlotAllocations/ns0:fiveMinuteBlock"/>
        </reference:FiveMinuteBlock>
      </tns:TimePlanningUnit>
      <tns:ArrivalOrDeparture>
      <!-- here we use a trick that emulates a ternary expression (or an Oracle SQL Decode if you like):
         when departureYn equals N, then the number() function evaluates to 1 and the substring for 'A' returns 'A'; in that case the second substring will evaluate to a zero length string because then the number for the expression that tests for 'Y' returns 0
      -->
      <xsl:value-of select="concat (
        substring ('A', 1, number (/ns0:PortalSlotAllocationsCollection/ns0:PortalSlotAllocations/ns0:departureYn = 'N' )  )
      , substring ('D', 1, number (/ns0:PortalSlotAllocationsCollection/ns0:PortalSlotAllocations/ns0:departureYn = 'Y' )  ) 
      )
      "/>
      </tns:ArrivalOrDeparture>
      <tns:AircraftModel>
        <xsl:value-of select="/ns0:PortalSlotAllocationsCollection/ns0:PortalSlotAllocations/ns0:iataAircraftModelType"/>
      </tns:AircraftModel>

    </tns:allocateSlotRequestMessage>
  </xsl:template>
</xsl:stylesheet>
