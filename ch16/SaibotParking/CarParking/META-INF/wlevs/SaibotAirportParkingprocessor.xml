<?xml version="1.0" encoding="UTF-8"?>
<wlevs:config xmlns:wlevs="http://www.bea.com/ns/wlevs/config/application">
  <processor>
    <name>carParkEventProcessor</name>
    <rules>
          <view id="CarparkStatus"><![CDATA[ 
 IStream(select sum(car.entryOrExit) as carCount, car.carparkIdentifier 
 from carInputChannel as car 
 group by carparkIdentifier) ]]></view>
    
 <!--     <query id="CarparkQuery"><![CDATA[ 
 select  carCount, carparkIdentifier, carParkNames.carparkName as description from CarparkStatus[now]  as car 
 , TABLE(saibot.airport.facilities.parking.CarParkManager.getCarparkDetails(
  car.carparkIdentifier) 
   AS carparkName OF CHAR) AS carParkNames
  ]]></query>
  
  -->
      <query id="CarparkQuery"><![CDATA[ 
 RStream(  select  carCount, carparkIdentifier, R.name as description , to_char(100*carCount/R.capacity) as percentageFull
 from CarparkStatus[now]  as car 
 , carparkCache as R 
         where carparkIdentifier = R.identifier
         )
  ]]></query>
    </rules>
  </processor>
 <processor>
    <name>abandonedCarsProcessor</name>
    <rules>
      <query id="AbandonedCarsQuery"><![CDATA[ 
 select abandoned.licencePlate,abandoned.carparkIdentifier, abandoned.arrivalTime as arrivalDate 
 from carInputChannel match_recognize ( 
 partition by carparkIdentifier, licencePlate
 measures A.licencePlate as licencePlate  , A.carparkIdentifier as carparkIdentifier, A.arrivalTime as arrivalTime
 INCLUDE TIMER EVENTS
 pattern (A NotExit*)
 duration 120 seconds
 define 
 A as entryOrExit= 1 
 , NotExit AS entryOrExit!= -1
  ) as abandoned
 ]]></query>
    </rules>
  </processor>
  <processor>
    <name>carParkNearlyFullProcessor</name>
    <rules>
      <view id="CarparkStatus"><![CDATA[ 
         IStream(select sum(car.entryOrExit) as carCount, car.carparkIdentifier 
         from carInputChannel as car 
         group by carparkIdentifier) ]]>
      </view>
      <view id="CarparkNearlyFullView"><![CDATA[ 
         RStream(  select  car.carCount
                   , car.carparkIdentifier
                   , R.name as description 
                   , to_char(100*car.carCount/R.capacity) as percentageFull
                   , R.capacity as carParkCapacity
                   from  CarparkStatus [now]  as car 
                   ,     carparkCache as R 
                   where car.carparkIdentifier = R.identifier
         )
      ]]></view>
      <view id="CarparkStatusView"><![CDATA[ 
         RStream(  select  min(carCount) as recentLowCarCount
                   ,       carparkIdentifier
                   from    CarparkStatus [range 30 second]  as car 
                   group by carparkIdentifier
                )
      ]]></view>

      <query id="CarparkNearlyFullQuery"><![CDATA[ 
 IStream(  select  carCount
 , c1.carparkIdentifier as carparkIdentifier
 , description  as description
 , percentageFull
  , carParkCapacity as capacity
 , recentLowCarCount as lowestRecentCount
 from CarparkNearlyFullView[now] as c1
 , CarparkStatusView[now] as c2
 where c1.carparkIdentifier = c2.carparkIdentifier
and percentageFull >= 90
and (100*c2.recentLowCarCount/c1.carParkCapacity) >= 85
         )
  ]]></query>
    </rules>
  </processor>
</wlevs:config>
