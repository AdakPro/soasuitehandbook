<?xml version = "1.0" encoding = "UTF-8" ?>
<!--
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  Oracle JDeveloper BPEL Designer 
  
  Created: Wed Feb 11 18:27:28 CET 2015
  Author:  lucas_j
  Purpose: Synchronous BPEL Process
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
-->
<process name="AircraftServiceNegotiationProcessor"
               targetNamespace="http://xmlns.oracle.com/AircraftServices_step1/AircraftServiceOrchestrator/AircraftServiceNegotiationProcessor"
               xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
               xmlns:client="http://xmlns.oracle.com/AircraftServices_step1/AircraftServiceOrchestrator/AircraftServiceNegotiationProcessor"
               xmlns:ora="http://schemas.oracle.com/xpath/extension"
               xmlns:bpelx="http://schemas.oracle.com/bpel/extension"
               xmlns:ns1="saibot.airport/operational/aircraftservice"
               xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
         xmlns:ui="http://xmlns.oracle.com/soa/designer"
         xmlns:xp20="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.Xpath20"
         xmlns:ns2="http://xmlns.oracle.com/AirportServicesPlatform/AirportServiceRequest/AirportService"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:ns3="saibot.airport/operational/aircraftservicenegotiation"
         xmlns:bpws="http://schemas.xmlsoap.org/ws/2003/03/business-process/"
         xmlns:oraext="http://www.oracle.com/XSL/Transform/java/oracle.tip.pc.services.functions.ExtFunc"
         xmlns:dvm="http://www.oracle.com/XSL/Transform/java/oracle.tip.dvm.LookupValue"
         xmlns:hwf="http://xmlns.oracle.com/bpel/workflow/xpath"
         xmlns:ids="http://xmlns.oracle.com/bpel/services/IdentityService/xpath"
         xmlns:bpm="http://xmlns.oracle.com/bpmn20/extensions" xmlns:ess="http://xmlns.oracle.com/scheduler"
         xmlns:xdk="http://schemas.oracle.com/bpel/extension/xpath/function/xdk"
         xmlns:xref="http://www.oracle.com/XSL/Transform/java/oracle.tip.xref.xpath.XRefXPathFunctions"
         xmlns:ldap="http://schemas.oracle.com/xpath/extension/ldap"
         xmlns:ns4="http://xmlns.oracle.com/AircraftServices_step1/AircraftServiceOrchestrator/AircraftServiceNegotiationProcessor/correlationset">

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      PARTNERLINKS                                                      
      List of services participating in this BPEL process               
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <bpelx:annotation>
    <bpelx:analysis>
      <bpelx:property name="propertiesFile">
        <![CDATA[../WSDLs/AircraftServiceNegotiationProcessor_properties.wsdl]]>
      </bpelx:property>
    </bpelx:analysis>
  </bpelx:annotation>
  <import namespace="saibot.airport/operational/aircraftservice"
          location="../WSDLs/AircraftServiceNegotiationWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"
          ui:processWSDL="true"/>
  <partnerLinks>
    <!-- 
      The 'client' role represents the requester of this service. It is 
      used for callback. The location and correlation information associated
      with the client role are automatically set using WS-Addressing.
    -->
    <partnerLink name="AircraftServiceNegotiationService" partnerLinkType="ns1:AircraftServiceNegotiationProcessor" myRole="AircraftServiceNegotiation"/>
    <partnerLink name="AirportServiceProvider" partnerLinkType="ns2:AirportServiceProvider"
                 partnerRole="AircraftService" myRole="AircraftServiceCallback"/>
    <partnerLink name="FlyingHighAircraftServiceProvider" partnerLinkType="ns2:AircraftServiceRequestProcessor"
                 partnerRole="AircraftService" myRole="AircraftServiceCallback"/>
  </partnerLinks>

  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
      VARIABLES                                                        
      List of messages and XML documents used within this BPEL process 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <variables>
    <!-- Reference to the message passed as input during initiation -->
    <variable name="inputVariable" messageType="ns1:ArrangeAircraftServiceRequestMessage"/>

    <!-- Reference to the message that will be returned to the requester-->
    <variable name="outputVariable" messageType="ns1:ArrangeAircraftServiceResponseMessage"/>
    <variable name="RFPIdentification" type="xsd:string"/>
    <variable name="Deadline" type="xsd:dateTime"/>
  </variables>
  <correlationSets>
    <correlationSet name="ServiceRequestIdentifierSet" properties="ns4:serviceRequestIdentifier"/>
  </correlationSets>
  <!-- 
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
     ORCHESTRATION LOGIC                                               
     Set of activities coordinating the flow of messages across the    
     services integrated within this business process                  
    ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
  -->
  <sequence name="main">

    <!-- Receive input from requestor. (Note: This maps to operation defined in AircraftServiceNegotiationProcessor.wsdl) -->
    <receive name="receiveInput" partnerLink="AircraftServiceNegotiationService" portType="ns1:AircraftServiceNegotiation" operation="arrangeAircraftService" variable="inputVariable" createInstance="yes"/>
    <assign name="SetGlobals">
    <copy>
        <from>concat('RFPACS' , $inputVariable.part1/ns3:ServiceRequestId, xp20:format-dateTime(xp20:current-dateTime(),'D01M01YY'))</from>
        <to>$RFPIdentification</to>
      </copy>
      <copy>
        <from>xp20:add-dayTimeDuration-to-dateTime(xp20:current-dateTime(), 'PT5M')</from>
        <to>$Deadline</to>
      </copy>
    </assign>
    <assign name="SetSynchReply">
          <copy>
        <from>$inputVariable.part1/ns3:ServiceRequestId</from>
        <to>$outputVariable.part1/ns3:ServiceRequestId</to>
      </copy>
      <copy>
        <from>$Deadline</from>
        <to>$outputVariable.part1/ns3:DealCloseDate</to>
      </copy>
</assign>
    <!-- Generate reply to synchronous request -->
    <reply name="replyOutput" partnerLink="AircraftServiceNegotiationService" portType="ns1:AircraftServiceNegotiation" operation="arrangeAircraftService" variable="outputVariable">
      <correlations>
        <correlation set="ServiceRequestIdentifierSet" initiate="yes"/>
      </correlations>
    </reply>
    <scope name="ExecuteRFP">
      <variables>
        <variable name="RequestProposalForService_requestProposal_InputVariable"
                  messageType="ns2:requestProposalMessage"/>
        <variable name="ReceiveProposalForAircraftService_submitProposal_InputVariable"
                  messageType="ns2:submitProposalCallbackMessage"/>
        <variable name="FlyingHigh_submitProposal_InputVariable" messageType="ns2:submitProposalCallbackMessage"/>
</variables>
      <eventHandlers>
        <onEvent partnerLink="AircraftServiceNegotiationService" operation="cancelAircraftService"
                 portType="ns1:AircraftServiceNegotiation" variable="cancelAircraftServiceRequest"
                 element="ns3:CancelAircraftServiceRequestMessage">
          <correlations>
            <correlation set="ServiceRequestIdentifierSet" initiate="no"/>
          </correlations>
          <scope name="Scope1">
            <variables>
              <variable name="Reply1_cancelAircraftService_OutputVariable"
                        messageType="ns1:CancelAircraftServiceResponseMessage"/>
            </variables>
            <sequence name="Sequence3">
              <assign name="SetAcknowledgement">
                <copy>
                  <from>$cancelAircraftServiceRequest/ns3:ServiceRequestId</from>
                  <to>$Reply1_cancelAircraftService_OutputVariable.part1/ns3:ServiceRequestId</to>
                </copy>
                <copy>
                  <from>concat('Received the instruction to cancel Service Request ',$cancelAircraftServiceRequest/ns3:ServiceRequestId)</from>
                  <to>$Reply1_cancelAircraftService_OutputVariable.part1/ns3:Description</to>
                </copy>
              </assign>
              <reply name="AcknowledgeCancellation" variable="Reply1_cancelAircraftService_OutputVariable"
                     partnerLink="AircraftServiceNegotiationService" portType="ns1:AircraftServiceNegotiation"
                     operation="cancelAircraftService"/>
              <exit name="Exit2"/>
            </sequence>
          </scope>
        </onEvent>
        <onAlarm bpelx:name="HandleDeadlineExpiry">
          <until>$Deadline</until>
          <scope name="HandleDeadlineExpiry">
            <exit name="Exit1"/>
          </scope>
        </onAlarm>
      </eventHandlers>
      <sequence name="Sequence1">
        <assign name="SetInputForRFP">
          <copy>
            <from>$inputVariable.part1/ns3:RequestingCarrierIATACode</from>
            <to>$RequestProposalForService_requestProposal_InputVariable.part1/ns1:RequestingCarrierIATACode</to>
          </copy>
          <copy>
            <from>$inputVariable.part1/ns3:Flight</from>
            <to>$RequestProposalForService_requestProposal_InputVariable.part1/ns1:Flight</to>
          </copy>
          <copy>
            <from>$inputVariable.part1/ns3:Services</from>
            <to>$RequestProposalForService_requestProposal_InputVariable.part1/ns1:Services</to>
          </copy>
          <copy>
            <from>$RFPIdentification</from>
            <to>$RequestProposalForService_requestProposal_InputVariable.part1/ns1:RFPIdentificationNumber</to>
          </copy>
          <copy>
            <from>$Deadline</from>
            <to>$RequestProposalForService_requestProposal_InputVariable.part1/ns1:DeadlineForProposals</to>
          </copy>
        </assign>
                <flow name="InterrogateAllAircraftServiceProviders">
  <sequence name="Sequence">
            <invoke name="RequestProposalForService" bpelx:invokeAsDetail="no" partnerLink="AirportServiceProvider"
                    portType="ns2:AircraftService" operation="requestProposal"
                    inputVariable="RequestProposalForService_requestProposal_InputVariable"/>
            <receive name="ReceiveProposalForAircraftService" partnerLink="AirportServiceProvider"
                     portType="ns2:AircraftServiceCallback" operation="submitProposal"
                     variable="ReceiveProposalForAircraftService_submitProposal_InputVariable"/>
          </sequence>
          <sequence name="Sequence2">
            <invoke name="RequestProposalFromFlyingHigh" partnerLink="FlyingHighAircraftServiceProvider"
                    portType="ns2:AircraftService" operation="requestProposal"
                    inputVariable="RequestProposalForService_requestProposal_InputVariable" bpelx:invokeAsDetail="no"></invoke>
            <receive name="ReceiveProposalFromFlyingHigh" partnerLink="FlyingHighAircraftServiceProvider"
                     portType="ns2:AircraftServiceCallback" operation="submitProposal"
                     variable="FlyingHigh_submitProposal_InputVariable"></receive>
          </sequence>
        </flow>
      </sequence>
    </scope>
  </sequence>
</process>