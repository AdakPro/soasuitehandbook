<?xml version="1.0" encoding="UTF-8" ?>
<!-- Generated by Oracle SOA Modeler version 12.1.3.0.0 at [3/2/14 7:07 AM]. -->
<composite name="FlightUpdateNotificationService"
           revision="1.1"
           label="2014-03-02_07-07-56_071"
           mode="active"
           state="on"
           xmlns="http://xmlns.oracle.com/sca/1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy"
           xmlns:orawsp="http://schemas.oracle.com/ws/2006/01/policy"
           xmlns:ui="http://xmlns.oracle.com/soa/designer/"
           xmlns:sca-ext="http://xmlns.oracle.com/sca/1.0-ext">
  <import namespace="http://xmlns.oracle.com/pcbpel/adapter/ums/FlightUpdateNotificationService/FlightUpdateNotificationService/EmailSender"
          location="WSDLs/EmailSender.wsdl" importType="wsdl"/>
  <import namespace="saibot.airport/services/flightupdatenotification"
          location="WSDLs/FlightUpdateNotificationService.wsdl" importType="wsdl"/>
  <import namespace="http://xmlns.oracle.com/pcbpel/adapter/ums/FlightUpdateNotificationService/FlightUpdateNotificationService/ChatClient"
          location="WSDLs/ChatClient.wsdl" importType="wsdl"/>
  <import namespace="http://spring.services.airport.saibot/" location="WSDLs/TwitterMessageSender.wsdl"
          importType="wsdl"/>
  <import namespace="http://spring.services.airport.saibot/" location="WSDLs/ValueMapper.wsdl" importType="wsdl"/>
  <import namespace="http://spring.services.airport.saibot/" location="WSDLs/Announcer.wsdl" importType="wsdl"/>
  <import namespace="http://spring.services.airport.saibot/" location="WSDLs/ContentHandler.wsdl" importType="wsdl"/>
  <import namespace="http://spring.services.airport.saibot/" location="WSDLs/DropboxAdapter.wsdl" importType="wsdl"/>
  <import namespace="http://spring.services.airport.saibot/" location="WSDLs/TwitterStatusUpdater.wsdl"
          importType="wsdl"/>
  <import namespace="http://spring.services.airport.saibot/" location="WSDLs/TextToSpeechConverter.wsdl"
          importType="wsdl"/>
  <import namespace="http://xmlns.oracle.com/pcbpel/adapter/file/FlightUpdateNotificationService_step2/FlightUpdateNotificationService/MP3Writer"
          location="WSDLs/MP3Writer.wsdl" importType="wsdl"/>
  <service name="FlightUpdateNotificationService" ui:wsdlLocation="WSDLs/FlightUpdateNotificationService.wsdl">
    <interface.wsdl interface="saibot.airport/services/flightupdatenotification#wsdl.interface(FlightUpdateNotificationServicePortType)"/>
    <binding.ws port="saibot.airport/services/flightupdatenotification#wsdl.endpoint(MachineToHumanMediator_ep/FlightUpdateNotificationServicePort)"/>
  </service>
  <property name="productVersion" type="xs:string" many="false">12.1.3.0.0</property>
  <property name="compositeID" type="xs:string" many="false">352890ff-fe13-4bc4-bf64-d72a5440a853</property>
  <component name="MachineToHumanMediator">
    <implementation.mediator src="Mediators/MachineToHumanMediator.mplan"/>
    <componentType>
      <service name="MachineToHumanMediator" ui:wsdlLocation="WSDLs/FlightUpdateNotificationService.wsdl">
        <interface.wsdl interface="saibot.airport/services/flightupdatenotification#wsdl.interface(FlightUpdateNotificationServicePortType)"/>
      </service>
      <reference name="EmailSender" ui:wsdlLocation="WSDLs/EmailSender.wsdl">
        <interface.wsdl interface="http://xmlns.oracle.com/pcbpel/adapter/ums/FlightUpdateNotificationService/FlightUpdateNotificationService/EmailSender#wsdl.interface(SendNotification_ptt)"/>
      </reference>
      <reference name="ChatClient" ui:wsdlLocation="WSDLs/ChatClient.wsdl">
        <interface.wsdl interface="http://xmlns.oracle.com/pcbpel/adapter/ums/FlightUpdateNotificationService/FlightUpdateNotificationService/ChatClient#wsdl.interface(SendNotification_ptt)"/>
      </reference>
      <reference name="TwitterChannel.TwitterMessenger" ui:wsdlLocation="WSDLs/TwitterMessageSender.wsdl">
        <interface.wsdl interface="http://spring.services.airport.saibot/#wsdl.interface(TwitterMessageSender)"/>
      </reference>
      <reference name="FlightAnnouncementComposer.FlightAnnouncementComposer" ui:wsdlLocation="WSDLs/Announcer.wsdl">
        <interface.wsdl interface="http://spring.services.airport.saibot/#wsdl.interface(Announcer)"/>
      </reference>
      <reference name="TextToSpeechConverter.TextToSpeechConverter" ui:wsdlLocation="WSDLs/TextToSpeechConverter.wsdl">
        <interface.wsdl interface="http://spring.services.airport.saibot/#wsdl.interface(TextToSpeechConverter)"/>
      </reference>
    </componentType>
  </component>
  <component name="TwitterChannel">
    <implementation.spring src="Spring/TwitterChannel.xml"/>
    <componentType>
      <service name="TwitterMessenger">
        <interface.java interface="saibot.airport.services.spring.TwitterMessageSender"/>
      </service>
      <service name="Tweeter">
        <interface.java interface="saibot.airport.services.spring.TwitterStatusUpdater"/>
      </service>
    </componentType>
  </component>
  <component name="TextToSpeechConverter">
    <implementation.spring src="Spring/TextToSpeechConverter.xml"/>
    <componentType>
      <service name="TextToSpeechConverter">
        <interface.java interface="saibot.airport.services.spring.TextToSpeechConverter"/>
      </service>
      <reference name="ContentHandler">
        <interface.java interface="saibot.airport.services.spring.ContentHandler"/>
      </reference>
    </componentType>
  </component>
  <component name="DropboxAdapter">
    <implementation.spring src="Spring/DropboxAdapter.xml"/>
    <componentType>
      <service name="DropboxAdapter">
        <interface.java interface="saibot.airport.services.spring.DropboxAdapter"/>
      </service>
    </componentType>
  </component>
  <component name="FlightAnnouncementComposer">
    <implementation.spring src="Spring/FlightAnnouncementComposer.xml"/>
    <componentType>
      <service name="FlightAnnouncementComposer">
        <interface.java interface="saibot.airport.services.spring.Announcer"/>
      </service>
      <reference name="CarrierMapper">
        <interface.java interface="saibot.airport.services.spring.ValueMapper"/>
      </reference>
    </componentType>
  </component>
  <component name="CarrierMapper">
    <implementation.mediator src="Mediators/CarrierMapper.mplan"/>
    <componentType>
      <service name="CarrierMapper" ui:wsdlLocation="WSDLs/ValueMapper.wsdl">
        <interface.wsdl interface="http://spring.services.airport.saibot/#wsdl.interface(ValueMapper)"/>
      </service>
    </componentType>
  </component>
  <component name="MP3Router">
    <implementation.mediator src="Mediators/MP3Router.mplan"/>
    <componentType>
      <service name="MP3Router" ui:wsdlLocation="WSDLs/ContentHandler.wsdl">
        <interface.wsdl interface="http://spring.services.airport.saibot/#wsdl.interface(ContentHandler)"/>
      </service>
      <reference name="DropboxAdapter.DropboxAdapter" ui:wsdlLocation="WSDLs/DropboxAdapter.wsdl">
        <interface.wsdl interface="http://spring.services.airport.saibot/#wsdl.interface(DropboxAdapter)"/>
      </reference>
      <reference name="TwitterChannel.Tweeter" ui:wsdlLocation="WSDLs/TwitterStatusUpdater.wsdl">
        <interface.wsdl interface="http://spring.services.airport.saibot/#wsdl.interface(TwitterStatusUpdater)"/>
      </reference>
      <reference name="MP3Writer" ui:wsdlLocation="WSDLs/MP3Writer.wsdl">
        <interface.wsdl interface="http://xmlns.oracle.com/pcbpel/adapter/file/FlightUpdateNotificationService_step2/FlightUpdateNotificationService/MP3Writer#wsdl.interface(Write_ptt)"/>
      </reference>
    </componentType>
  </component>
  <reference name="EmailSender" ui:wsdlLocation="WSDLs/EmailSender.wsdl">
    <interface.wsdl interface="http://xmlns.oracle.com/pcbpel/adapter/ums/FlightUpdateNotificationService/FlightUpdateNotificationService/EmailSender#wsdl.interface(SendNotification_ptt)"/>
    <binding.jca config="Adapters/EmailSender_ums.jca"/>
  </reference>
  <reference name="ChatClient" ui:wsdlLocation="WSDLs/ChatClient.wsdl">
    <interface.wsdl interface="http://xmlns.oracle.com/pcbpel/adapter/ums/FlightUpdateNotificationService/FlightUpdateNotificationService/ChatClient#wsdl.interface(SendNotification_ptt)"/>
    <binding.jca config="Adapters/ChatClient_ums.jca"/>
  </reference>
  <reference name="MP3Writer" ui:wsdlLocation="WSDLs/MP3Writer.wsdl">
    <interface.wsdl interface="http://xmlns.oracle.com/pcbpel/adapter/file/FlightUpdateNotificationService_step2/FlightUpdateNotificationService/MP3Writer#wsdl.interface(Write_ptt)"/>
    <binding.jca config="Adapters/MP3Writer_file.jca"/>
    <property name="MP3_ANNOUNCEMENTS_FOLDER" type="xs:string" many="false" override="may">/tmp/saibotairport/announcements</property>
  </reference>
  <wire>
    <source.uri>FlightUpdateNotificationService</source.uri>
    <target.uri>MachineToHumanMediator/MachineToHumanMediator</target.uri>
  </wire>
  <wire>
    <source.uri>MachineToHumanMediator/EmailSender</source.uri>
    <target.uri>EmailSender</target.uri>
  </wire>
  <wire>
    <source.uri>MachineToHumanMediator/ChatClient</source.uri>
    <target.uri>ChatClient</target.uri>
  </wire>
  <wire>
    <source.uri>MachineToHumanMediator/TwitterChannel.TwitterMessenger</source.uri>
    <target.uri>TwitterChannel/TwitterMessenger</target.uri>
  </wire>
  <wire>
    <source.uri>FlightAnnouncementComposer/CarrierMapper</source.uri>
    <target.uri>CarrierMapper/CarrierMapper</target.uri>
  </wire>
  <wire>
    <source.uri>MachineToHumanMediator/FlightAnnouncementComposer.FlightAnnouncementComposer</source.uri>
    <target.uri>FlightAnnouncementComposer/FlightAnnouncementComposer</target.uri>
  </wire>
  <wire>
    <source.uri>TextToSpeechConverter/ContentHandler</source.uri>
    <target.uri>MP3Router/MP3Router</target.uri>
  </wire>
  <wire>
    <source.uri>MP3Router/DropboxAdapter.DropboxAdapter</source.uri>
    <target.uri>DropboxAdapter/DropboxAdapter</target.uri>
  </wire>
  <wire>
    <source.uri>MP3Router/TwitterChannel.Tweeter</source.uri>
    <target.uri>TwitterChannel/Tweeter</target.uri>
  </wire>
  <wire>
    <source.uri>MachineToHumanMediator/TextToSpeechConverter.TextToSpeechConverter</source.uri>
    <target.uri>TextToSpeechConverter/TextToSpeechConverter</target.uri>
  </wire>
  <wire>
    <source.uri>MP3Router/MP3Writer</source.uri>
    <target.uri>MP3Writer</target.uri>
  </wire>
</composite>
